# Adiciona as definições de tipos necessários
Add-Type -TypeDefinition @"
using System;
using System.Runtime.InteropServices;
public class WindowEffects {
    [DllImport("user32.dll")]
    public static extern IntPtr GetForegroundWindow();
    [DllImport("user32.dll")]
    public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);
    public static readonly IntPtr HWND_TOPMOST = new IntPtr(-1);
    public const uint SWP_NOSIZE = 0x0001;
    public const uint SWP_NOMOVE = 0x0002;
    public const uint SWP_SHOWWINDOW = 0x0040;
    [DllImport("user32.dll")]
    public static extern bool FlashWindowEx(ref FLASHWINFO pwfi);
    [StructLayout(LayoutKind.Sequential)]
    public struct FLASHWINFO {
        public uint cbSize;
        public IntPtr hwnd;
        public uint dwFlags;
        public uint uCount;
        public uint dwTimeout;
    }
    public const uint FLASHW_STOP = 0;
    public const uint FLASHW_TIMER = 1;
    public const uint FLASHW_TIMERNOFG = 2;
    public const uint FLASHW_ALL = FLASHW_TIMER | FLASHW_TIMERNOFG;
}
"@

# Obtém a janela do PowerShell
$hwnd = [WindowEffects]::GetForegroundWindow()
$width = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width
$height = [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height

# Função para exibir a mensagem de erro
function Show-ErrorMessage {
    while ($true) {
        msg * "Erro! Este é um erro fictício. Não é possível fechar esta mensagem facilmente."
        Start-Sleep -Seconds 1
    }
}

# Função para criar efeito de janela tremendo e movendo aleatoriamente
function Shake-Window {
    while ($true) {
        [WindowEffects]::SetWindowPos($hwnd, [WindowEffects]::HWND_TOPMOST, 
            Get-Random -Minimum 0 -Maximum ($width - 200), 
            Get-Random -Minimum 0 -Maximum ($height - 200), 
            0, 0, 
            [WindowEffects]::SWP_NOSIZE -bor [WindowEffects]::SWP_SHOWWINDOW
        )
        Start-Sleep -Milliseconds 500
    }
}

# Função para criar efeito de piscar na janela
function Flash-Window {
    $flash = New-Object WindowEffects+FLASHWINFO
    $flash.cbSize = [System.Runtime.InteropServices.Marshal]::SizeOf($flash)
    $flash.hwnd = $hwnd
    $flash.dwFlags = [WindowEffects]::FLASHW_ALL
    $flash.uCount = 3
    $flash.dwTimeout = 0

    while ($true) {
        [WindowEffects]::FlashWindowEx([ref]$flash) | Out-Null
        Start-Sleep -Seconds 1
    }
}

# Executa as funções em paralelo
Start-Job -ScriptBlock { Show-ErrorMessage }
Start-Job -ScriptBlock { Shake-Window }
Start-Job -ScriptBlock { Flash-Window }
